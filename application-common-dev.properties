#配置log4j2
logging.config=classpath:log4j2.xml


#eureka服务地址
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:10010/eureka/
#拉取服务列表间隔时间
#eureka.client.registry-fetch-interval-seconds=10
# 每隔xs发送一次心跳
#eureka.instance.lease-renewal-interval-in-seconds=10
#告知服务端x秒还未收到心跳的话，就将该服务移除列表
#eureka.instance.lease-expiration-duration-in-seconds=30
#在eureka中注册名称优先使用ip地址
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
eureka.instance.prefer-ip-address=true
#在eureka中点击服务名跳转到swagger-ui页面
eureka.instance.status-page-url=http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path}/swagger-ui.html


#actuator端口 不设置则默认为server.port
#management.server.port=${server.port}
#修改访问路径  2.0之前默认是/   2.0默认是 /actuator  可以通过这个属性值修改，访问时加path前缀
#management.endpoints.web.base-path=/
#开放所有页面节点  默认只开启了health、info两个节点
management.endpoints.web.exposure.include=*
#显示健康具体信息  默认不会显示详细信息
management.endpoint.health.show-details=always
#使用这个配置请记住则不能通过命令进行刷新相关配置(配置为none，否则spring-boot-starter-actuator导致数据源循环引用无法启动)
spring.cloud.refresh.refreshable=none

# datasource settings
spring.datasource.url=jdbc:mysql://localhost:3306/pica?useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true
spring.datasource.username=test
spring.datasource.password=111111
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.max-idle=10
spring.datasource.max-active=15
spring.datasource.max-lifetime=86430000
spring.datasource.log-abandoned=true
spring.datasource.remove-abandoned=true
spring.datasource.remove-abandoned-timeout=60
spring.datasource.sqlScriptEncoding=UTF-8
spring.datasource.hikari.pool-name=springHikariCP
spring.datasource.hikari.connection-test-query=SELECT 1
#mybatis settings
mybatis.mapper-locations=classpath:mybatis/*.xml


#开启hystrix
feign.hystrix.enabled=true
#开启hystrix请求超时机制
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#请求连接的超时时间
ribbon.ConnectTimeout=6000
#请求处理的超时时间
ribbon.ReadTimeout=6000
#负载均衡器服务列表缓存
ribbon.ServerListRefreshInterval=5000


#************************ hystrix--queryThreadPoolKey--queryGroupKey--queryCommandKey begin************************#
#参数设置含义可参考https://blog.csdn.net/hry2015/article/details/78554846
#表示HystrixCommand.run()的执行时的隔离策略，有以下两种策略
#1 THREAD: 在单独的线程上执行，并发请求受线程池中的线程数限制
#2 SEMAPHORE: 在调用线程上执行，并发请求量受信号量计数限制
#在默认情况下，推荐HystrixCommands 使用 thread 隔离策略，HystrixObservableCommand 使用 semaphore 隔离策略。
#只有在高并发(单个实例每秒达到几百个调用)的调用时，才需要修改HystrixCommands 的隔离策略为semaphore 。semaphore 隔离策略通常只用于非网络调用
hystrix.command.queryCommandKey.execution.isolation.strategy=THREAD
#表示是否开启超时设置。默认值：true
hystrix.command.queryCommandKey.execution.timeout.enabled=true
#设置调用者执行的超时时间（单位毫秒） 默认值：1000
hystrix.command.queryCommandKey.execution.isolation.thread.timeoutInMilliseconds=5000

#设置统计滚动窗口的时间长度 默认值： 10000
hystrix.command.queryCommandKey.metrics.rollingStats.timeInMilliseconds=10000
#设置统计滚动窗口的桶数量 metrics.rollingStats.timeInMilliseconds % metrics.rollingStats.numBuckets == 0
#10000/10、10000/20是正确的配置,但是10000/7错误的,在高并发的环境里，每个桶的时间长度建议大于100ms 默认值：10
hystrix.command.queryCommandKey.metrics.rollingStats.numBuckets=10

#是否开启断路器功能 默认值：true
hystrix.command.queryCommandKey.circuitBreaker.enabled=true
#该属性设置滚动窗口中将使断路器跳闸的最小请求数量.如果此属性值为20，则在窗口时间内（如10s内），如果只收到19个请求且都失败了，则断路器也不会开启。默认值：20
hystrix.command.queryCommandKey.circuitBreaker.requestVolumeThreshold=20
#断路器跳闸后，在此值的时间的内，hystrix会拒绝新的请求，只有过了这个时间断路器才会打开闸门 默认值：5000
hystrix.command.queryCommandKey.circuitBreaker.sleepWindowInMilliseconds=5000
#设置失败百分比的阈值。如果失败比率超过这个值，则断路器跳闸并且进入fallback逻辑 默认值：50
hystrix.command.queryCommandKey.circuitBreaker.errorThresholdPercentage=75

#设置线程池的core的大小 默认值：10
hystrix.threadpool.queryThreadPoolKey.coreSize=50
#设置allowMaximumSizeToDivergeFromCoreSize值为true时，maximumSize才有作用 默认值：false
hystrix.threadpool.queryThreadPoolKey.allowMaximumSizeToDivergeFromCoreSize=true
#设置最大的线程池的大小，只有设置allowMaximumSizeToDivergeFromCoreSize时，此值才起作用 默认值：10
hystrix.threadpool.queryThreadPoolKey.maximumSize=100
#设置最大的BlockingQueue队列的值。如果设置-1，则使用SynchronousQueue队列，如果设置正数，则使用LinkedBlockingQueue队列 默认值：-1
hystrix.threadpool.queryThreadPoolKey.maxQueueSize=500
#************************ hystrix--queryThreadPoolKey--queryGroupKey--queryCommandKey  end ************************#